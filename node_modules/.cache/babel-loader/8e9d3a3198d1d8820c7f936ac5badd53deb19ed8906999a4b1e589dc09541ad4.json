{"ast":null,"code":"var _jsxFileName = \"/home/hack/Documents/ProyectoFinal/proyecto_react_mio/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { getMyUserDataService } from \"../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProviderComponent = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [user, setUser] = useState(null);\n\n  //guardamos el token en el localStorage\n  useEffect(() => {\n    localStorage.setItem(\"token\", token);\n  }, [token]);\n  //vemos si el token es v치lido solicitando informaci칩n de usuario\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const data = await getMyUserDataService({\n          token\n        });\n        setUser(data);\n      } catch (error) {}\n    };\n    if (token) getUserData();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      setToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProviderComponent, \"O6EaUoA/GU7eUW26nLTZFZ7uzio=\");\n_c = AuthProviderComponent;\nvar _c;\n$RefreshReg$(_c, \"AuthProviderComponent\");","map":{"version":3,"names":["createContext","useEffect","useState","getMyUserDataService","jsxDEV","_jsxDEV","AuthContext","AuthProviderComponent","_ref","_s","children","token","setToken","localStorage","getItem","user","setUser","setItem","getUserData","data","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hack/Documents/ProyectoFinal/proyecto_react_mio/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { getMyUserDataService } from \"../services\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProviderComponent = ({ children }) => {\n  const [token, setToken] = useState(localStorage.getItem(\"token\"));\n  const [user, setUser] = useState(null);\n\n  //guardamos el token en el localStorage\n  useEffect(() => {\n    localStorage.setItem(\"token\", token);\n  }, [token]);\n  //vemos si el token es v치lido solicitando informaci칩n de usuario\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const data = await getMyUserDataService({ token });\n        setUser(data);\n      } catch (error) {}\n    };\n    if (token) getUserData();\n  }, [token]);\n\n  return (\n    <AuthContext.Provider value={{ token, setToken }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,oBAAoB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,WAAW,gBAAGN,aAAa,EAAE;AAE1C,OAAO,MAAMO,qBAAqB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACjE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAM;IACdY,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEN,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EACX;EACAV,SAAS,CAAC,MAAM;IACd,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMhB,oBAAoB,CAAC;UAAEQ;QAAM,CAAC,CAAC;QAClDK,OAAO,CAACG,IAAI,CAAC;MACf,CAAC,CAAC,OAAOC,KAAK,EAAE,CAAC;IACnB,CAAC;IACD,IAAIT,KAAK,EAAEO,WAAW,EAAE;EAC1B,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,oBACEN,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK;MAAEC;IAAS,CAAE;IAAAF,QAAA,EAC9CA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACY;AAE3B,CAAC;AAACjB,EAAA,CAxBWF,qBAAqB;AAAAoB,EAAA,GAArBpB,qBAAqB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}